{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tusha\\\\OneDrive\\\\Desktop\\\\Hackathon1\\\\Lost-And-Found\\\\Frontend\\\\src\\\\components\\\\Particle.jsx\",\n  _s = $RefreshSig$();\nimport Particles from \"react-tsparticles\";\nimport { useCallback } from \"react\";\nimport particleconfig from \"./config/particleconfig\";\n// import { loadFull } from \"tsparticles\";\nimport { loadSlim } from \"tsparticles-slim\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Particle() {\n  _s();\n  const particlesInit = useCallback(async engine => {\n    console.log(engine);\n    //  await loadFull(engine);\n    await loadSlim(engine);\n  }, []);\n  const particlesLoaded = useCallback(async container => {\n    await console.log(container);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Particles, {\n    options: particleconfig,\n    id: \"tsparticles\",\n    init: particlesInit,\n    loaded: particlesLoaded\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(Particle, \"PjleD03JXt5mR6AE5+SxrsWvXBc=\");\n_c = Particle;\nvar _c;\n$RefreshReg$(_c, \"Particle\");","map":{"version":3,"names":["Particles","useCallback","particleconfig","loadSlim","jsxDEV","_jsxDEV","Particle","_s","particlesInit","engine","console","log","particlesLoaded","container","options","id","init","loaded","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/tusha/OneDrive/Desktop/Hackathon1/Lost-And-Found/Frontend/src/components/Particle.jsx"],"sourcesContent":["import Particles from \"react-tsparticles\";\r\nimport { useCallback } from \"react\";\r\nimport particleconfig from \"./config/particleconfig\";\r\n// import { loadFull } from \"tsparticles\";\r\nimport { loadSlim } from \"tsparticles-slim\";\r\nexport default function Particle() {\r\n const particlesInit = useCallback(async (engine) => {\r\n   console.log(engine);\r\n  //  await loadFull(engine);\r\n  await loadSlim(engine);\r\n }, []);\r\n\r\n const particlesLoaded = useCallback(async (container) => {\r\n   await console.log(container);\r\n }, []);\r\n\r\n  return (\r\n    <Particles\r\n      options={particleconfig}\r\n      id=\"tsparticles\"\r\n      init={particlesInit}\r\n      loaded={particlesLoaded}\r\n    />\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,SAAS,MAAM,mBAAmB;AACzC,SAASC,WAAW,QAAQ,OAAO;AACnC,OAAOC,cAAc,MAAM,yBAAyB;AACpD;AACA,SAASC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC5C,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClC,MAAMC,aAAa,GAAGP,WAAW,CAAC,MAAOQ,MAAM,IAAK;IAClDC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;IACpB;IACA,MAAMN,QAAQ,CAACM,MAAM,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,eAAe,GAAGX,WAAW,CAAC,MAAOY,SAAS,IAAK;IACvD,MAAMH,OAAO,CAACC,GAAG,CAACE,SAAS,CAAC;EAC9B,CAAC,EAAE,EAAE,CAAC;EAEL,oBACER,OAAA,CAACL,SAAS;IACRc,OAAO,EAAEZ,cAAe;IACxBa,EAAE,EAAC,aAAa;IAChBC,IAAI,EAAER,aAAc;IACpBS,MAAM,EAAEL;EAAgB;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzB,CAAC;AAEN;AAACd,EAAA,CAnBuBD,QAAQ;AAAAgB,EAAA,GAARhB,QAAQ;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}